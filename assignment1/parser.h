
#ifndef PARSER
#define PARSER

//⟨expr⟩ ::= ⟨var⟩ | '(' ⟨expr⟩ ')' | '\' ⟨var⟩ ⟨expr⟩ | ⟨expr⟩ ⟨expr⟩
class Parser{

public:

    // a function to read a token and apply the language rules
    void parse(int token);

    // getter for bool passed
    bool getPassed(){
        return passed;
    }

private:

    // functions

    // Parses strings in the language generated by the rule:
    // ⟨expr⟩ ::= VAR | '(' ⟨expr⟩ ')' | '\' VAR ⟨expr⟩ | ⟨expr⟩ ⟨expr⟩
    void expr();

    // 
    void error();

    // variables
    
    int nextToken;
    bool passed = true; // a variable that keeps track if the parser detected errors


};

#endif